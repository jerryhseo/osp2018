/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.kisti.osp.spyglass.service.base;

import com.kisti.osp.spyglass.model.ScienceApp;
import com.kisti.osp.spyglass.service.ScienceAppService;
import com.kisti.osp.spyglass.service.persistence.ScienceAppInputPortsPersistence;
import com.kisti.osp.spyglass.service.persistence.ScienceAppLayoutPersistence;
import com.kisti.osp.spyglass.service.persistence.ScienceAppLogPortsPersistence;
import com.kisti.osp.spyglass.service.persistence.ScienceAppManagerPersistence;
import com.kisti.osp.spyglass.service.persistence.ScienceAppOutputPortsPersistence;
import com.kisti.osp.spyglass.service.persistence.ScienceAppPersistence;
import com.kisti.osp.spyglass.service.persistence.ScienceAppWorkflowPersistence;

import com.liferay.asset.kernel.service.persistence.AssetEntryPersistence;
import com.liferay.asset.kernel.service.persistence.AssetLinkPersistence;
import com.liferay.asset.kernel.service.persistence.AssetTagPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the science app remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.kisti.osp.spyglass.service.impl.ScienceAppServiceImpl}.
 * </p>
 *
 * @author Jerry H. Seo
 * @see com.kisti.osp.spyglass.service.impl.ScienceAppServiceImpl
 * @see com.kisti.osp.spyglass.service.ScienceAppServiceUtil
 * @generated
 */
public abstract class ScienceAppServiceBaseImpl extends BaseServiceImpl
	implements ScienceAppService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.kisti.osp.spyglass.service.ScienceAppServiceUtil} to access the science app remote service.
	 */

	/**
	 * Returns the science app local service.
	 *
	 * @return the science app local service
	 */
	public com.kisti.osp.spyglass.service.ScienceAppLocalService getScienceAppLocalService() {
		return scienceAppLocalService;
	}

	/**
	 * Sets the science app local service.
	 *
	 * @param scienceAppLocalService the science app local service
	 */
	public void setScienceAppLocalService(
		com.kisti.osp.spyglass.service.ScienceAppLocalService scienceAppLocalService) {
		this.scienceAppLocalService = scienceAppLocalService;
	}

	/**
	 * Returns the science app remote service.
	 *
	 * @return the science app remote service
	 */
	public ScienceAppService getScienceAppService() {
		return scienceAppService;
	}

	/**
	 * Sets the science app remote service.
	 *
	 * @param scienceAppService the science app remote service
	 */
	public void setScienceAppService(ScienceAppService scienceAppService) {
		this.scienceAppService = scienceAppService;
	}

	/**
	 * Returns the science app persistence.
	 *
	 * @return the science app persistence
	 */
	public ScienceAppPersistence getScienceAppPersistence() {
		return scienceAppPersistence;
	}

	/**
	 * Sets the science app persistence.
	 *
	 * @param scienceAppPersistence the science app persistence
	 */
	public void setScienceAppPersistence(
		ScienceAppPersistence scienceAppPersistence) {
		this.scienceAppPersistence = scienceAppPersistence;
	}

	/**
	 * Returns the science app input ports local service.
	 *
	 * @return the science app input ports local service
	 */
	public com.kisti.osp.spyglass.service.ScienceAppInputPortsLocalService getScienceAppInputPortsLocalService() {
		return scienceAppInputPortsLocalService;
	}

	/**
	 * Sets the science app input ports local service.
	 *
	 * @param scienceAppInputPortsLocalService the science app input ports local service
	 */
	public void setScienceAppInputPortsLocalService(
		com.kisti.osp.spyglass.service.ScienceAppInputPortsLocalService scienceAppInputPortsLocalService) {
		this.scienceAppInputPortsLocalService = scienceAppInputPortsLocalService;
	}

	/**
	 * Returns the science app input ports persistence.
	 *
	 * @return the science app input ports persistence
	 */
	public ScienceAppInputPortsPersistence getScienceAppInputPortsPersistence() {
		return scienceAppInputPortsPersistence;
	}

	/**
	 * Sets the science app input ports persistence.
	 *
	 * @param scienceAppInputPortsPersistence the science app input ports persistence
	 */
	public void setScienceAppInputPortsPersistence(
		ScienceAppInputPortsPersistence scienceAppInputPortsPersistence) {
		this.scienceAppInputPortsPersistence = scienceAppInputPortsPersistence;
	}

	/**
	 * Returns the science app layout local service.
	 *
	 * @return the science app layout local service
	 */
	public com.kisti.osp.spyglass.service.ScienceAppLayoutLocalService getScienceAppLayoutLocalService() {
		return scienceAppLayoutLocalService;
	}

	/**
	 * Sets the science app layout local service.
	 *
	 * @param scienceAppLayoutLocalService the science app layout local service
	 */
	public void setScienceAppLayoutLocalService(
		com.kisti.osp.spyglass.service.ScienceAppLayoutLocalService scienceAppLayoutLocalService) {
		this.scienceAppLayoutLocalService = scienceAppLayoutLocalService;
	}

	/**
	 * Returns the science app layout persistence.
	 *
	 * @return the science app layout persistence
	 */
	public ScienceAppLayoutPersistence getScienceAppLayoutPersistence() {
		return scienceAppLayoutPersistence;
	}

	/**
	 * Sets the science app layout persistence.
	 *
	 * @param scienceAppLayoutPersistence the science app layout persistence
	 */
	public void setScienceAppLayoutPersistence(
		ScienceAppLayoutPersistence scienceAppLayoutPersistence) {
		this.scienceAppLayoutPersistence = scienceAppLayoutPersistence;
	}

	/**
	 * Returns the science app log ports local service.
	 *
	 * @return the science app log ports local service
	 */
	public com.kisti.osp.spyglass.service.ScienceAppLogPortsLocalService getScienceAppLogPortsLocalService() {
		return scienceAppLogPortsLocalService;
	}

	/**
	 * Sets the science app log ports local service.
	 *
	 * @param scienceAppLogPortsLocalService the science app log ports local service
	 */
	public void setScienceAppLogPortsLocalService(
		com.kisti.osp.spyglass.service.ScienceAppLogPortsLocalService scienceAppLogPortsLocalService) {
		this.scienceAppLogPortsLocalService = scienceAppLogPortsLocalService;
	}

	/**
	 * Returns the science app log ports persistence.
	 *
	 * @return the science app log ports persistence
	 */
	public ScienceAppLogPortsPersistence getScienceAppLogPortsPersistence() {
		return scienceAppLogPortsPersistence;
	}

	/**
	 * Sets the science app log ports persistence.
	 *
	 * @param scienceAppLogPortsPersistence the science app log ports persistence
	 */
	public void setScienceAppLogPortsPersistence(
		ScienceAppLogPortsPersistence scienceAppLogPortsPersistence) {
		this.scienceAppLogPortsPersistence = scienceAppLogPortsPersistence;
	}

	/**
	 * Returns the science app manager local service.
	 *
	 * @return the science app manager local service
	 */
	public com.kisti.osp.spyglass.service.ScienceAppManagerLocalService getScienceAppManagerLocalService() {
		return scienceAppManagerLocalService;
	}

	/**
	 * Sets the science app manager local service.
	 *
	 * @param scienceAppManagerLocalService the science app manager local service
	 */
	public void setScienceAppManagerLocalService(
		com.kisti.osp.spyglass.service.ScienceAppManagerLocalService scienceAppManagerLocalService) {
		this.scienceAppManagerLocalService = scienceAppManagerLocalService;
	}

	/**
	 * Returns the science app manager persistence.
	 *
	 * @return the science app manager persistence
	 */
	public ScienceAppManagerPersistence getScienceAppManagerPersistence() {
		return scienceAppManagerPersistence;
	}

	/**
	 * Sets the science app manager persistence.
	 *
	 * @param scienceAppManagerPersistence the science app manager persistence
	 */
	public void setScienceAppManagerPersistence(
		ScienceAppManagerPersistence scienceAppManagerPersistence) {
		this.scienceAppManagerPersistence = scienceAppManagerPersistence;
	}

	/**
	 * Returns the science app output ports local service.
	 *
	 * @return the science app output ports local service
	 */
	public com.kisti.osp.spyglass.service.ScienceAppOutputPortsLocalService getScienceAppOutputPortsLocalService() {
		return scienceAppOutputPortsLocalService;
	}

	/**
	 * Sets the science app output ports local service.
	 *
	 * @param scienceAppOutputPortsLocalService the science app output ports local service
	 */
	public void setScienceAppOutputPortsLocalService(
		com.kisti.osp.spyglass.service.ScienceAppOutputPortsLocalService scienceAppOutputPortsLocalService) {
		this.scienceAppOutputPortsLocalService = scienceAppOutputPortsLocalService;
	}

	/**
	 * Returns the science app output ports persistence.
	 *
	 * @return the science app output ports persistence
	 */
	public ScienceAppOutputPortsPersistence getScienceAppOutputPortsPersistence() {
		return scienceAppOutputPortsPersistence;
	}

	/**
	 * Sets the science app output ports persistence.
	 *
	 * @param scienceAppOutputPortsPersistence the science app output ports persistence
	 */
	public void setScienceAppOutputPortsPersistence(
		ScienceAppOutputPortsPersistence scienceAppOutputPortsPersistence) {
		this.scienceAppOutputPortsPersistence = scienceAppOutputPortsPersistence;
	}

	/**
	 * Returns the science app workflow local service.
	 *
	 * @return the science app workflow local service
	 */
	public com.kisti.osp.spyglass.service.ScienceAppWorkflowLocalService getScienceAppWorkflowLocalService() {
		return scienceAppWorkflowLocalService;
	}

	/**
	 * Sets the science app workflow local service.
	 *
	 * @param scienceAppWorkflowLocalService the science app workflow local service
	 */
	public void setScienceAppWorkflowLocalService(
		com.kisti.osp.spyglass.service.ScienceAppWorkflowLocalService scienceAppWorkflowLocalService) {
		this.scienceAppWorkflowLocalService = scienceAppWorkflowLocalService;
	}

	/**
	 * Returns the science app workflow persistence.
	 *
	 * @return the science app workflow persistence
	 */
	public ScienceAppWorkflowPersistence getScienceAppWorkflowPersistence() {
		return scienceAppWorkflowPersistence;
	}

	/**
	 * Sets the science app workflow persistence.
	 *
	 * @param scienceAppWorkflowPersistence the science app workflow persistence
	 */
	public void setScienceAppWorkflowPersistence(
		ScienceAppWorkflowPersistence scienceAppWorkflowPersistence) {
		this.scienceAppWorkflowPersistence = scienceAppWorkflowPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	/**
	 * Returns the asset entry local service.
	 *
	 * @return the asset entry local service
	 */
	public com.liferay.asset.kernel.service.AssetEntryLocalService getAssetEntryLocalService() {
		return assetEntryLocalService;
	}

	/**
	 * Sets the asset entry local service.
	 *
	 * @param assetEntryLocalService the asset entry local service
	 */
	public void setAssetEntryLocalService(
		com.liferay.asset.kernel.service.AssetEntryLocalService assetEntryLocalService) {
		this.assetEntryLocalService = assetEntryLocalService;
	}

	/**
	 * Returns the asset entry remote service.
	 *
	 * @return the asset entry remote service
	 */
	public com.liferay.asset.kernel.service.AssetEntryService getAssetEntryService() {
		return assetEntryService;
	}

	/**
	 * Sets the asset entry remote service.
	 *
	 * @param assetEntryService the asset entry remote service
	 */
	public void setAssetEntryService(
		com.liferay.asset.kernel.service.AssetEntryService assetEntryService) {
		this.assetEntryService = assetEntryService;
	}

	/**
	 * Returns the asset entry persistence.
	 *
	 * @return the asset entry persistence
	 */
	public AssetEntryPersistence getAssetEntryPersistence() {
		return assetEntryPersistence;
	}

	/**
	 * Sets the asset entry persistence.
	 *
	 * @param assetEntryPersistence the asset entry persistence
	 */
	public void setAssetEntryPersistence(
		AssetEntryPersistence assetEntryPersistence) {
		this.assetEntryPersistence = assetEntryPersistence;
	}

	/**
	 * Returns the asset link local service.
	 *
	 * @return the asset link local service
	 */
	public com.liferay.asset.kernel.service.AssetLinkLocalService getAssetLinkLocalService() {
		return assetLinkLocalService;
	}

	/**
	 * Sets the asset link local service.
	 *
	 * @param assetLinkLocalService the asset link local service
	 */
	public void setAssetLinkLocalService(
		com.liferay.asset.kernel.service.AssetLinkLocalService assetLinkLocalService) {
		this.assetLinkLocalService = assetLinkLocalService;
	}

	/**
	 * Returns the asset link persistence.
	 *
	 * @return the asset link persistence
	 */
	public AssetLinkPersistence getAssetLinkPersistence() {
		return assetLinkPersistence;
	}

	/**
	 * Sets the asset link persistence.
	 *
	 * @param assetLinkPersistence the asset link persistence
	 */
	public void setAssetLinkPersistence(
		AssetLinkPersistence assetLinkPersistence) {
		this.assetLinkPersistence = assetLinkPersistence;
	}

	/**
	 * Returns the asset tag local service.
	 *
	 * @return the asset tag local service
	 */
	public com.liferay.asset.kernel.service.AssetTagLocalService getAssetTagLocalService() {
		return assetTagLocalService;
	}

	/**
	 * Sets the asset tag local service.
	 *
	 * @param assetTagLocalService the asset tag local service
	 */
	public void setAssetTagLocalService(
		com.liferay.asset.kernel.service.AssetTagLocalService assetTagLocalService) {
		this.assetTagLocalService = assetTagLocalService;
	}

	/**
	 * Returns the asset tag remote service.
	 *
	 * @return the asset tag remote service
	 */
	public com.liferay.asset.kernel.service.AssetTagService getAssetTagService() {
		return assetTagService;
	}

	/**
	 * Sets the asset tag remote service.
	 *
	 * @param assetTagService the asset tag remote service
	 */
	public void setAssetTagService(
		com.liferay.asset.kernel.service.AssetTagService assetTagService) {
		this.assetTagService = assetTagService;
	}

	/**
	 * Returns the asset tag persistence.
	 *
	 * @return the asset tag persistence
	 */
	public AssetTagPersistence getAssetTagPersistence() {
		return assetTagPersistence;
	}

	/**
	 * Sets the asset tag persistence.
	 *
	 * @param assetTagPersistence the asset tag persistence
	 */
	public void setAssetTagPersistence(AssetTagPersistence assetTagPersistence) {
		this.assetTagPersistence = assetTagPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return ScienceAppService.class.getName();
	}

	protected Class<?> getModelClass() {
		return ScienceApp.class;
	}

	protected String getModelClassName() {
		return ScienceApp.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = scienceAppPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.kisti.osp.spyglass.service.ScienceAppLocalService.class)
	protected com.kisti.osp.spyglass.service.ScienceAppLocalService scienceAppLocalService;
	@BeanReference(type = ScienceAppService.class)
	protected ScienceAppService scienceAppService;
	@BeanReference(type = ScienceAppPersistence.class)
	protected ScienceAppPersistence scienceAppPersistence;
	@BeanReference(type = com.kisti.osp.spyglass.service.ScienceAppInputPortsLocalService.class)
	protected com.kisti.osp.spyglass.service.ScienceAppInputPortsLocalService scienceAppInputPortsLocalService;
	@BeanReference(type = ScienceAppInputPortsPersistence.class)
	protected ScienceAppInputPortsPersistence scienceAppInputPortsPersistence;
	@BeanReference(type = com.kisti.osp.spyglass.service.ScienceAppLayoutLocalService.class)
	protected com.kisti.osp.spyglass.service.ScienceAppLayoutLocalService scienceAppLayoutLocalService;
	@BeanReference(type = ScienceAppLayoutPersistence.class)
	protected ScienceAppLayoutPersistence scienceAppLayoutPersistence;
	@BeanReference(type = com.kisti.osp.spyglass.service.ScienceAppLogPortsLocalService.class)
	protected com.kisti.osp.spyglass.service.ScienceAppLogPortsLocalService scienceAppLogPortsLocalService;
	@BeanReference(type = ScienceAppLogPortsPersistence.class)
	protected ScienceAppLogPortsPersistence scienceAppLogPortsPersistence;
	@BeanReference(type = com.kisti.osp.spyglass.service.ScienceAppManagerLocalService.class)
	protected com.kisti.osp.spyglass.service.ScienceAppManagerLocalService scienceAppManagerLocalService;
	@BeanReference(type = ScienceAppManagerPersistence.class)
	protected ScienceAppManagerPersistence scienceAppManagerPersistence;
	@BeanReference(type = com.kisti.osp.spyglass.service.ScienceAppOutputPortsLocalService.class)
	protected com.kisti.osp.spyglass.service.ScienceAppOutputPortsLocalService scienceAppOutputPortsLocalService;
	@BeanReference(type = ScienceAppOutputPortsPersistence.class)
	protected ScienceAppOutputPortsPersistence scienceAppOutputPortsPersistence;
	@BeanReference(type = com.kisti.osp.spyglass.service.ScienceAppWorkflowLocalService.class)
	protected com.kisti.osp.spyglass.service.ScienceAppWorkflowLocalService scienceAppWorkflowLocalService;
	@BeanReference(type = ScienceAppWorkflowPersistence.class)
	protected ScienceAppWorkflowPersistence scienceAppWorkflowPersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@ServiceReference(type = com.liferay.asset.kernel.service.AssetEntryLocalService.class)
	protected com.liferay.asset.kernel.service.AssetEntryLocalService assetEntryLocalService;
	@ServiceReference(type = com.liferay.asset.kernel.service.AssetEntryService.class)
	protected com.liferay.asset.kernel.service.AssetEntryService assetEntryService;
	@ServiceReference(type = AssetEntryPersistence.class)
	protected AssetEntryPersistence assetEntryPersistence;
	@ServiceReference(type = com.liferay.asset.kernel.service.AssetLinkLocalService.class)
	protected com.liferay.asset.kernel.service.AssetLinkLocalService assetLinkLocalService;
	@ServiceReference(type = AssetLinkPersistence.class)
	protected AssetLinkPersistence assetLinkPersistence;
	@ServiceReference(type = com.liferay.asset.kernel.service.AssetTagLocalService.class)
	protected com.liferay.asset.kernel.service.AssetTagLocalService assetTagLocalService;
	@ServiceReference(type = com.liferay.asset.kernel.service.AssetTagService.class)
	protected com.liferay.asset.kernel.service.AssetTagService assetTagService;
	@ServiceReference(type = AssetTagPersistence.class)
	protected AssetTagPersistence assetTagPersistence;
}