/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package OSPIcecap.service.base;

import OSPIcecap.model.DataTypeAnalyzerLink;

import OSPIcecap.service.DataTypeAnalyzerLinkService;

import OSPIcecap.service.persistence.DataCollectionLayoutPersistence;
import OSPIcecap.service.persistence.DataCollectionPersistence;
import OSPIcecap.service.persistence.DataEntryPersistence;
import OSPIcecap.service.persistence.DataTypeAnalyzerLinkPersistence;
import OSPIcecap.service.persistence.DataTypePersistence;
import OSPIcecap.service.persistence.DataTypeStructurePersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the data type analyzer link remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link OSPIcecap.service.impl.DataTypeAnalyzerLinkServiceImpl}.
 * </p>
 *
 * @author Jerry H. Seo
 * @see OSPIcecap.service.impl.DataTypeAnalyzerLinkServiceImpl
 * @see OSPIcecap.service.DataTypeAnalyzerLinkServiceUtil
 * @generated
 */
public abstract class DataTypeAnalyzerLinkServiceBaseImpl
	extends BaseServiceImpl implements DataTypeAnalyzerLinkService,
		IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link OSPIcecap.service.DataTypeAnalyzerLinkServiceUtil} to access the data type analyzer link remote service.
	 */

	/**
	 * Returns the data collection local service.
	 *
	 * @return the data collection local service
	 */
	public OSPIcecap.service.DataCollectionLocalService getDataCollectionLocalService() {
		return dataCollectionLocalService;
	}

	/**
	 * Sets the data collection local service.
	 *
	 * @param dataCollectionLocalService the data collection local service
	 */
	public void setDataCollectionLocalService(
		OSPIcecap.service.DataCollectionLocalService dataCollectionLocalService) {
		this.dataCollectionLocalService = dataCollectionLocalService;
	}

	/**
	 * Returns the data collection remote service.
	 *
	 * @return the data collection remote service
	 */
	public OSPIcecap.service.DataCollectionService getDataCollectionService() {
		return dataCollectionService;
	}

	/**
	 * Sets the data collection remote service.
	 *
	 * @param dataCollectionService the data collection remote service
	 */
	public void setDataCollectionService(
		OSPIcecap.service.DataCollectionService dataCollectionService) {
		this.dataCollectionService = dataCollectionService;
	}

	/**
	 * Returns the data collection persistence.
	 *
	 * @return the data collection persistence
	 */
	public DataCollectionPersistence getDataCollectionPersistence() {
		return dataCollectionPersistence;
	}

	/**
	 * Sets the data collection persistence.
	 *
	 * @param dataCollectionPersistence the data collection persistence
	 */
	public void setDataCollectionPersistence(
		DataCollectionPersistence dataCollectionPersistence) {
		this.dataCollectionPersistence = dataCollectionPersistence;
	}

	/**
	 * Returns the data collection layout local service.
	 *
	 * @return the data collection layout local service
	 */
	public OSPIcecap.service.DataCollectionLayoutLocalService getDataCollectionLayoutLocalService() {
		return dataCollectionLayoutLocalService;
	}

	/**
	 * Sets the data collection layout local service.
	 *
	 * @param dataCollectionLayoutLocalService the data collection layout local service
	 */
	public void setDataCollectionLayoutLocalService(
		OSPIcecap.service.DataCollectionLayoutLocalService dataCollectionLayoutLocalService) {
		this.dataCollectionLayoutLocalService = dataCollectionLayoutLocalService;
	}

	/**
	 * Returns the data collection layout remote service.
	 *
	 * @return the data collection layout remote service
	 */
	public OSPIcecap.service.DataCollectionLayoutService getDataCollectionLayoutService() {
		return dataCollectionLayoutService;
	}

	/**
	 * Sets the data collection layout remote service.
	 *
	 * @param dataCollectionLayoutService the data collection layout remote service
	 */
	public void setDataCollectionLayoutService(
		OSPIcecap.service.DataCollectionLayoutService dataCollectionLayoutService) {
		this.dataCollectionLayoutService = dataCollectionLayoutService;
	}

	/**
	 * Returns the data collection layout persistence.
	 *
	 * @return the data collection layout persistence
	 */
	public DataCollectionLayoutPersistence getDataCollectionLayoutPersistence() {
		return dataCollectionLayoutPersistence;
	}

	/**
	 * Sets the data collection layout persistence.
	 *
	 * @param dataCollectionLayoutPersistence the data collection layout persistence
	 */
	public void setDataCollectionLayoutPersistence(
		DataCollectionLayoutPersistence dataCollectionLayoutPersistence) {
		this.dataCollectionLayoutPersistence = dataCollectionLayoutPersistence;
	}

	/**
	 * Returns the data entry local service.
	 *
	 * @return the data entry local service
	 */
	public OSPIcecap.service.DataEntryLocalService getDataEntryLocalService() {
		return dataEntryLocalService;
	}

	/**
	 * Sets the data entry local service.
	 *
	 * @param dataEntryLocalService the data entry local service
	 */
	public void setDataEntryLocalService(
		OSPIcecap.service.DataEntryLocalService dataEntryLocalService) {
		this.dataEntryLocalService = dataEntryLocalService;
	}

	/**
	 * Returns the data entry remote service.
	 *
	 * @return the data entry remote service
	 */
	public OSPIcecap.service.DataEntryService getDataEntryService() {
		return dataEntryService;
	}

	/**
	 * Sets the data entry remote service.
	 *
	 * @param dataEntryService the data entry remote service
	 */
	public void setDataEntryService(
		OSPIcecap.service.DataEntryService dataEntryService) {
		this.dataEntryService = dataEntryService;
	}

	/**
	 * Returns the data entry persistence.
	 *
	 * @return the data entry persistence
	 */
	public DataEntryPersistence getDataEntryPersistence() {
		return dataEntryPersistence;
	}

	/**
	 * Sets the data entry persistence.
	 *
	 * @param dataEntryPersistence the data entry persistence
	 */
	public void setDataEntryPersistence(
		DataEntryPersistence dataEntryPersistence) {
		this.dataEntryPersistence = dataEntryPersistence;
	}

	/**
	 * Returns the data type local service.
	 *
	 * @return the data type local service
	 */
	public OSPIcecap.service.DataTypeLocalService getDataTypeLocalService() {
		return dataTypeLocalService;
	}

	/**
	 * Sets the data type local service.
	 *
	 * @param dataTypeLocalService the data type local service
	 */
	public void setDataTypeLocalService(
		OSPIcecap.service.DataTypeLocalService dataTypeLocalService) {
		this.dataTypeLocalService = dataTypeLocalService;
	}

	/**
	 * Returns the data type remote service.
	 *
	 * @return the data type remote service
	 */
	public OSPIcecap.service.DataTypeService getDataTypeService() {
		return dataTypeService;
	}

	/**
	 * Sets the data type remote service.
	 *
	 * @param dataTypeService the data type remote service
	 */
	public void setDataTypeService(
		OSPIcecap.service.DataTypeService dataTypeService) {
		this.dataTypeService = dataTypeService;
	}

	/**
	 * Returns the data type persistence.
	 *
	 * @return the data type persistence
	 */
	public DataTypePersistence getDataTypePersistence() {
		return dataTypePersistence;
	}

	/**
	 * Sets the data type persistence.
	 *
	 * @param dataTypePersistence the data type persistence
	 */
	public void setDataTypePersistence(DataTypePersistence dataTypePersistence) {
		this.dataTypePersistence = dataTypePersistence;
	}

	/**
	 * Returns the data type analyzer link local service.
	 *
	 * @return the data type analyzer link local service
	 */
	public OSPIcecap.service.DataTypeAnalyzerLinkLocalService getDataTypeAnalyzerLinkLocalService() {
		return dataTypeAnalyzerLinkLocalService;
	}

	/**
	 * Sets the data type analyzer link local service.
	 *
	 * @param dataTypeAnalyzerLinkLocalService the data type analyzer link local service
	 */
	public void setDataTypeAnalyzerLinkLocalService(
		OSPIcecap.service.DataTypeAnalyzerLinkLocalService dataTypeAnalyzerLinkLocalService) {
		this.dataTypeAnalyzerLinkLocalService = dataTypeAnalyzerLinkLocalService;
	}

	/**
	 * Returns the data type analyzer link remote service.
	 *
	 * @return the data type analyzer link remote service
	 */
	public DataTypeAnalyzerLinkService getDataTypeAnalyzerLinkService() {
		return dataTypeAnalyzerLinkService;
	}

	/**
	 * Sets the data type analyzer link remote service.
	 *
	 * @param dataTypeAnalyzerLinkService the data type analyzer link remote service
	 */
	public void setDataTypeAnalyzerLinkService(
		DataTypeAnalyzerLinkService dataTypeAnalyzerLinkService) {
		this.dataTypeAnalyzerLinkService = dataTypeAnalyzerLinkService;
	}

	/**
	 * Returns the data type analyzer link persistence.
	 *
	 * @return the data type analyzer link persistence
	 */
	public DataTypeAnalyzerLinkPersistence getDataTypeAnalyzerLinkPersistence() {
		return dataTypeAnalyzerLinkPersistence;
	}

	/**
	 * Sets the data type analyzer link persistence.
	 *
	 * @param dataTypeAnalyzerLinkPersistence the data type analyzer link persistence
	 */
	public void setDataTypeAnalyzerLinkPersistence(
		DataTypeAnalyzerLinkPersistence dataTypeAnalyzerLinkPersistence) {
		this.dataTypeAnalyzerLinkPersistence = dataTypeAnalyzerLinkPersistence;
	}

	/**
	 * Returns the data type structure local service.
	 *
	 * @return the data type structure local service
	 */
	public OSPIcecap.service.DataTypeStructureLocalService getDataTypeStructureLocalService() {
		return dataTypeStructureLocalService;
	}

	/**
	 * Sets the data type structure local service.
	 *
	 * @param dataTypeStructureLocalService the data type structure local service
	 */
	public void setDataTypeStructureLocalService(
		OSPIcecap.service.DataTypeStructureLocalService dataTypeStructureLocalService) {
		this.dataTypeStructureLocalService = dataTypeStructureLocalService;
	}

	/**
	 * Returns the data type structure remote service.
	 *
	 * @return the data type structure remote service
	 */
	public OSPIcecap.service.DataTypeStructureService getDataTypeStructureService() {
		return dataTypeStructureService;
	}

	/**
	 * Sets the data type structure remote service.
	 *
	 * @param dataTypeStructureService the data type structure remote service
	 */
	public void setDataTypeStructureService(
		OSPIcecap.service.DataTypeStructureService dataTypeStructureService) {
		this.dataTypeStructureService = dataTypeStructureService;
	}

	/**
	 * Returns the data type structure persistence.
	 *
	 * @return the data type structure persistence
	 */
	public DataTypeStructurePersistence getDataTypeStructurePersistence() {
		return dataTypeStructurePersistence;
	}

	/**
	 * Sets the data type structure persistence.
	 *
	 * @param dataTypeStructurePersistence the data type structure persistence
	 */
	public void setDataTypeStructurePersistence(
		DataTypeStructurePersistence dataTypeStructurePersistence) {
		this.dataTypeStructurePersistence = dataTypeStructurePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return DataTypeAnalyzerLinkService.class.getName();
	}

	protected Class<?> getModelClass() {
		return DataTypeAnalyzerLink.class;
	}

	protected String getModelClassName() {
		return DataTypeAnalyzerLink.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = dataTypeAnalyzerLinkPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = OSPIcecap.service.DataCollectionLocalService.class)
	protected OSPIcecap.service.DataCollectionLocalService dataCollectionLocalService;
	@BeanReference(type = OSPIcecap.service.DataCollectionService.class)
	protected OSPIcecap.service.DataCollectionService dataCollectionService;
	@BeanReference(type = DataCollectionPersistence.class)
	protected DataCollectionPersistence dataCollectionPersistence;
	@BeanReference(type = OSPIcecap.service.DataCollectionLayoutLocalService.class)
	protected OSPIcecap.service.DataCollectionLayoutLocalService dataCollectionLayoutLocalService;
	@BeanReference(type = OSPIcecap.service.DataCollectionLayoutService.class)
	protected OSPIcecap.service.DataCollectionLayoutService dataCollectionLayoutService;
	@BeanReference(type = DataCollectionLayoutPersistence.class)
	protected DataCollectionLayoutPersistence dataCollectionLayoutPersistence;
	@BeanReference(type = OSPIcecap.service.DataEntryLocalService.class)
	protected OSPIcecap.service.DataEntryLocalService dataEntryLocalService;
	@BeanReference(type = OSPIcecap.service.DataEntryService.class)
	protected OSPIcecap.service.DataEntryService dataEntryService;
	@BeanReference(type = DataEntryPersistence.class)
	protected DataEntryPersistence dataEntryPersistence;
	@BeanReference(type = OSPIcecap.service.DataTypeLocalService.class)
	protected OSPIcecap.service.DataTypeLocalService dataTypeLocalService;
	@BeanReference(type = OSPIcecap.service.DataTypeService.class)
	protected OSPIcecap.service.DataTypeService dataTypeService;
	@BeanReference(type = DataTypePersistence.class)
	protected DataTypePersistence dataTypePersistence;
	@BeanReference(type = OSPIcecap.service.DataTypeAnalyzerLinkLocalService.class)
	protected OSPIcecap.service.DataTypeAnalyzerLinkLocalService dataTypeAnalyzerLinkLocalService;
	@BeanReference(type = DataTypeAnalyzerLinkService.class)
	protected DataTypeAnalyzerLinkService dataTypeAnalyzerLinkService;
	@BeanReference(type = DataTypeAnalyzerLinkPersistence.class)
	protected DataTypeAnalyzerLinkPersistence dataTypeAnalyzerLinkPersistence;
	@BeanReference(type = OSPIcecap.service.DataTypeStructureLocalService.class)
	protected OSPIcecap.service.DataTypeStructureLocalService dataTypeStructureLocalService;
	@BeanReference(type = OSPIcecap.service.DataTypeStructureService.class)
	protected OSPIcecap.service.DataTypeStructureService dataTypeStructureService;
	@BeanReference(type = DataTypeStructurePersistence.class)
	protected DataTypeStructurePersistence dataTypeStructurePersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
}